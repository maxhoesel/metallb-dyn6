---
name: Prepare a new Chart Release

on:
  workflow_dispatch:
  release:
    types:
      - created
      - published

jobs:
  prepare-release-pr:
    name: Create release PR
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Check out codebase
        uses: actions/checkout@v4

      - uses: release-drafter/release-drafter@v5
        id: drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          config-name: release-drafter-chart.yml

      - name: Extract version from release name
        run: echo "RELEASE_VERSION=$(echo ${{ steps.drafter.outputs.name }} | sed 's/chart-v//')" >> $GITHUB_ENV

      - name: Set up Python 3
        uses: actions/setup-python@v4
        with:
          python-version: "3"

      - name: Update chart version
        working-directory: helm/charts/metallb-dyn6
        run: |
          make version=${{ env.RELEASE_VERSION }} set-chart-version

      - name: Open PR for release
        uses: peter-evans/create-pull-request@v5
        with:
          base: main
          add-paths: |
            helm/charts/metallb-dyn6/Chart.yaml
          title: Prepare Release ${{ steps.drafter.outputs.name }}
          body: |
            Steps to release ${{ steps.drafter.outputs.name }}:

            1. Merge this PR. This will update the chart version in the repository.
            2. Publish the created Draft Release [here](${{ steps.drafter.outputs.html_url }})

            Once merged and published, the CI will then package and upload the Helm chart assets
          commit-message: "Chart Release ${{ steps.drafter.outputs.name }}"
          branch: maintenance/release-pr-chart
          labels: chore
          delete-branch: true
